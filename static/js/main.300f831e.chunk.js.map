{"version":3,"sources":["http-common.js","services/users.service.js","components/Details.js","components/Home.js","hooks/useMounted.js","components/UserForm/UserForm.js","components/AddUser.js","components/EditUser.js","App.js","reportWebVitals.js","index.js"],"names":["axios","create","baseURL","headers","http","get","id","data","post","put","delete","Details","props","title","centered","closable","visible","cancelButtonProps","style","display","okText","onOk","handleClose","user","first_name","last_name","email","to","danger","onClick","handleDelete","success","message","type","Home","useState","userList","setUserList","isMounted","useRef","timer","useEffect","UsersDataService","getAllUsers","then","res","current","local","localStorage","getItem","Array","from","JSON","parse","slice","setItem","stringify","catch","error","console","log","setShowDeleted","clearTimeout","editMode","setEditMode","detailsMode","setDetailsMode","userToShow","setUserToShow","setVisible","showDeleted","deleteById","users","position","findIndex","item","splice","setTimeout","window","location","reload","userListDisplay","map","className","justify","handleDetails","xs","span","lg","offset","dashed","textAlign","removeItem","useMounted","UserForm","onFinish","editing","user_id","existingIDs","Form","useForm","form","selectedUser","setSelectedUser","disabled","setDisabled","getUserToEdit","Promise","resolve","reject","setFieldsValue","labelCol","wrapperCol","name","values","Item","label","onChange","e","rules","required","htmlType","AddUser","history","useHistory","showSaved","setShowSaved","createUser","newUser","unshift","push","EditUser","useParams","undefined","Option","updateById","App","useLocation","pathname","selected","setSelected","key","selectedKeys","mode","icon","HomeOutlined","EditOutlined","FileAddOutlined","exact","path","component","render","selection","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.300f831e.chunk.js","sourcesContent":["import axios from \"axios\";\n\nexport default axios.create({\n  baseURL: \"https://reqres.in/api\",\n  // baseURL: \"https://jsonplaceholder.typicode.com\",\n  headers: {\n    \"Content-type\": \"application/json\",\n  },\n});\n","import http from \"../http-common\";\n\nclass UsersDataService {\n  getAllUsers() {\n    return http.get(\"/users\");\n  }\n\n  getById(id) {\n    return http.get(`/users/${id}`);\n  }\n\n  createUser(data) {\n    return http.post(\"/users\", data);\n  }\n\n  updateById(id, data) {\n    return http.put(`/users/${id}`, data);\n  }\n\n  deleteById(id) {\n    return http.delete(`/users/${id}`);\n  }\n}\n\nexport default new UsersDataService();\n","import {Modal, Button} from \"antd\";\nimport {Space, Alert, Divider} from \"antd\";\nimport {Link} from \"react-router-dom\";\n\nfunction Details(props) {\n  return (\n    <div>\n      <Modal\n        title=\"Detalles del Usuario:\"\n        centered\n        closable={false}\n        visible={props.visible}\n        cancelButtonProps={{style: {display: \"none\"}}}\n        okText={\"Cerrar\"}\n        onOk={props.handleClose}>\n        <p>Nombre: {props.user.first_name}</p>\n        <p>Apellido: {props.user.last_name} </p>{\" \"}\n        <p>Email: {props.user.email} </p>{\" \"}\n        <Space>\n          <Link to={\"/edit/\" + props.user.id}>\n            <Button>Editar Usuario</Button>\n          </Link>\n          <Button danger onClick={() => props.handleDelete(props.user.id)}>\n            Borrar Usuario\n          </Button>\n        </Space>\n        <Divider />\n        {props.success && (\n          <Alert message=\"Usuario borrado con éxito\" type=\"info\" />\n        )}\n      </Modal>\n    </div>\n  );\n}\n\nexport default Details;\n","import {useState, useEffect, useRef} from \"react\";\nimport UsersDataService from \"../services/users.service\";\nimport Details from \"./Details\";\nimport {Button, Col, Row, Alert, Divider, Typography} from \"antd\";\nimport {Link} from \"react-router-dom\";\n\nfunction Home(props) {\n  const [userList, setUserList] = useState([]);\n  const isMounted = useRef(true);\n  const timer = useRef(true);\n\n  useEffect(() => {\n    UsersDataService.getAllUsers()\n      .then(res => {\n        if (isMounted.current) {\n          let local = localStorage.getItem(\"users\");\n          if (local) {\n            local = Array.from(JSON.parse(local));\n            setUserList(local);\n          } else if (!local) {\n            setUserList(res.data.data.slice(0, 5));\n            localStorage.setItem(\n              \"users\",\n              JSON.stringify(res.data.data.slice(0, 5))\n            );\n          }\n        }\n      })\n      .catch(error => console.log(error));\n    return () => {\n      isMounted.current = false;\n      setShowDeleted(false);\n      clearTimeout(timer.current);\n    };\n  }, [props]);\n\n  const [editMode, setEditMode] = useState(false);\n  const handleEdit = user => {\n    setEditMode(true);\n    setDetailsMode(false);\n  };\n\n  const [detailsMode, setDetailsMode] = useState(false);\n  const [userToShow, setUserToShow] = useState();\n  const handleDetails = item => {\n    setDetailsMode(true);\n    setUserToShow(item);\n    setVisible(true);\n  };\n\n  const [visible, setVisible] = useState(false);\n\n  const handleClose = () => {\n    setVisible(false);\n    setDetailsMode(false);\n  };\n\n  const [showDeleted, setShowDeleted] = useState(false);\n\n  const handleDelete = id => {\n    UsersDataService.deleteById(id)\n      .then(res => {\n        console.log(res);\n        const users = JSON.parse(localStorage.getItem(\"users\"));\n        const position = users.findIndex(item => +item.id === +id);\n        users.splice(position, 1);\n        localStorage.setItem(\"users\", JSON.stringify(users));\n        if (isMounted.current) {\n          setShowDeleted(true);\n          timer.current = setTimeout(() => {\n            setShowDeleted(false);\n            window.location.reload();\n          }, 3000);\n        }\n      })\n      .catch(error => console.log(error));\n  };\n\n  const restoreData = () => {\n    localStorage.removeItem(\"users\");\n    window.location.reload();\n  };\n\n  const userListDisplay = userList.slice(0, 5).map(item => (\n    <div className=\"userContainer\" key={item.id + item.first_name}>\n      <h2>Nombre: {item.first_name}</h2>\n      <Row justify=\"space-around\">\n        <Button type=\"primary\" onClick={() => handleDetails(item)}>\n          Ver detalle de Usuario\n        </Button>{\" \"}\n        <Link to={\"/edit/\" + item.id}>\n          <Button onClick={() => handleEdit(item)}>Editar Usuario</Button>{\" \"}\n        </Link>\n        <Button danger onClick={() => handleDelete(item.id)}>\n          Borrar Usuario\n        </Button>\n      </Row>\n    </div>\n  ));\n\n  return (\n    <div>\n      {!editMode && (\n        <Col xs={{span: 24}} lg={{span: 12, offset: 6}}>\n          <h1>Listado de Usuarios</h1>\n          {userListDisplay}\n          {showDeleted && !detailsMode && (\n            <Alert message=\"Usuario borrado con éxito\" type=\"info\" />\n          )}\n        </Col>\n      )}\n      {detailsMode && (\n        <Details\n          success={detailsMode && showDeleted}\n          user={userToShow}\n          visible={visible}\n          handleClose={handleClose}\n          handleDelete={handleDelete}\n        />\n      )}\n\n      <Divider dashed />\n      <Col xs={{span: 24}} lg={{span: 12, offset: 6}}>\n        <Row justify=\"space-around\">\n          <Typography type=\"secondary\" style={{textAlign: \"justify\"}}>\n            Desde el menú y los botones se puede modificar los datos, que\n            quedarán guardados en una copia local (la API no persiste las\n            modificaciones). En caso de querer restaurarlos desde la API\n            clickear el siguiente botón.\n          </Typography>\n          <Divider dashed />\n          <Button onClick={restoreData} type=\"secondary\">\n            Restaurar datos desde la API\n          </Button>\n        </Row>\n      </Col>\n    </div>\n  );\n}\n\nexport default Home;\n","import {useRef, useEffect} from \"react\";\n\nconst useMounted = () => {\n\n  const isMounted = useRef(false);\n\n  useEffect(() => {\n    isMounted.current = true;\n\n    return () => {\n      isMounted.current = false;\n    };\n  }, []);\n\n  return isMounted\n};\n\nexport default useMounted;\n","import {Form, Input, Button, Select} from \"antd\";\nimport {useState} from \"react\";\n\nexport default function UserForm({onFinish, editing, user_id, existingIDs}) {\n  const [form] = Form.useForm();\n\n  const formLayout = {\n    labelCol: {span: 8},\n    wrapperCol: {span: 16},\n  };\n\n  const [selectedUser, setSelectedUser] = useState(0);\n  const [disabled, setDisabled] = useState(true);\n\n  if (user_id) {\n    getUserToEdit(user_id);\n  }\n\n  const handleSelect = e => {\n    console.log(e)\n    setSelectedUser(()=>e);\n    getUserToEdit(e);\n  };\n\n  function getUserToEdit(id) {\n    console.log(\"edit\", id);\n    const users = JSON.parse(localStorage.getItem(\"users\"));\n    const position = users.findIndex(item => +item.id === +id);\n    const user = users[position];\n    const auxPromise = new Promise((resolve, reject) => {\n      resolve(user);\n    });\n    auxPromise.then(res => {\n      form.setFieldsValue(res);\n      setDisabled(false);\n    });\n  }\n\n  return (\n    <Form {...formLayout} form={form} name=\"control-hooks\" onFinish={(values)=>onFinish(values, user_id || selectedUser)}>\n      {editing && (\n        <Form.Item label=\"Id del usuario a editar\">\n          <Select\n            type=\"number\"\n            name=\"Id\"\n            onChange={handleSelect}\n            disabled={!disabled}\n            // value={user_id || selectedUser}\n          >\n          {existingIDs}\n          </Select>\n        </Form.Item>\n      )}\n      <Form.Item\n        label=\"Nombre\"\n        name=\"first_name\"\n        rules={[\n          {\n            required: true,\n            message: \"Campo requerido\",\n          },\n        ]}>\n        <Input type=\"text\" />\n      </Form.Item>\n\n      <Form.Item\n        label=\"Apellido\"\n        name=\"last_name\"\n        rules={[\n          {\n            required: true,\n            message: \"Campo requerido\",\n          },\n        ]}>\n        <Input type=\"text\" />\n      </Form.Item>\n\n      <Form.Item\n        label=\"Email\"\n        name=\"email\"\n        rules={[\n          {\n            required: true,\n            message: \"Campo requerido\",\n          },\n        ]}>\n        <Input type=\"email\" />\n      </Form.Item>\n\n      <Button className=\"rightAlignedButtons\" type=\"primary\" htmlType=\"submit\">\n        Enviar\n      </Button>\n\n      {\"  \"}\n    </Form>\n  );\n}\n","import {useState, useEffect, useRef} from \"react\";\nimport UsersDataService from \"../services/users.service\";\nimport {Col, Alert} from \"antd\";\nimport useMounted from \"../hooks/useMounted\";\nimport {useHistory} from \"react-router-dom\";\nimport UserForm from \"./UserForm/UserForm\";\n\nfunction AddUser() {\n  const history = useHistory();\n\n  const [showSaved, setShowSaved] = useState(false);\n  const timer = useRef(true);\n\n  useEffect(() => {\n    return () => {\n      setShowSaved(false);\n      clearTimeout(timer.current);\n    };\n  }, []);\n\n  const isMounted = useMounted();\n\n  const onFinish = values => {\n    const data = {\n      last_name: values.last_name,\n      first_name: values.first_name,\n      email: values.email,\n    };\n    UsersDataService.createUser(data)\n      .then(res => {\n        console.log(res)\n        const newUser = res.data;\n        const users = JSON.parse(localStorage.getItem(\"users\"))\n        users.unshift(newUser)\n        localStorage.setItem(\"users\", JSON.stringify(users));\n        if (isMounted.current) {\n          setShowSaved(true);\n          timer.current = setTimeout(() => {\n            setShowSaved(false);\n            history.push(\"/\");\n          }, 3000);\n        }\n      })\n      .catch(error => console.log(error));\n  };\n\n\n\n  return (\n    <div>\n      <Col span={12} offset={6}>\n        <h1>Agregar Usuario</h1>\n        <p>Desde aquí podés agregar un nuevo usuario </p>\n        <UserForm onFinish={onFinish} />\n        {showSaved && <Alert message=\"Usuario creado con éxito\" type=\"info\" />}\n      </Col>\n    </div>\n  );\n}\n\nexport default AddUser;\n","import {useState, useEffect, useRef} from \"react\";\nimport UsersDataService from \"../services/users.service\";\nimport {Col, Button, Alert, Select} from \"antd\";\nimport useMounted from \"../hooks/useMounted\";\nimport {useHistory, useParams} from \"react-router-dom\";\nimport {Link} from \"react-router-dom\";\nimport UserForm from \"./UserForm/UserForm\";\n\nfunction EditUser() {\n  const history = useHistory();\n\n  const [showSaved, setShowSaved] = useState(false);\n  const isMounted = useMounted();\n  const timer = useRef(true);\n\n  useEffect(() => {\n    return () => {\n      isMounted.current = false;\n      setShowSaved(false);\n      clearTimeout(timer.current);\n    };\n  }, [isMounted]);\n\n  const onFinish = (values, id) => {\n    UsersDataService.updateById(id, values)\n      .then(res => {\n        console.log(res);\n        const users = JSON.parse(localStorage.getItem(\"users\"));\n        const position = users.findIndex(item => +item.id === +id);\n        users[position] = {id:  +id, ...values};\n        localStorage.setItem(\"users\", JSON.stringify(users));\n        if (isMounted.current) {\n          setShowSaved(true);\n          timer.current = setTimeout(() => {\n            setShowSaved(false);\n            history.push(\"/\");\n          }, 3000);\n        }\n      })\n      .catch(error => console.log(error));\n  };\n\n  const {user_id} = useParams();\n\n  let existingIDs;\n\n  if (user_id === undefined) {\n    let local = localStorage.getItem(\"users\");\n    if (local) {\n      local = Array.from(JSON.parse(local));\n      existingIDs = local.map(item => {\n        return <Select.Option key={item.id}>{item.id}</Select.Option>;\n      });\n    } else if (!local) {\n      console.log(\"error\");\n    }\n  }\n\n  return (\n    <main>\n      <Col span={12} offset={6}>\n        <h1 className=\"centeredTitle\">Editar Usuario</h1>\n        <p>\n          En esta opción podés elegir el usuario a editar. Si en todo caso\n          querés editar directamente desde un usuario, hacé click sobre la\n          opción \"editar\" al pie del mismo.\n        </p>\n        <UserForm\n          onFinish={onFinish}\n          editing={true}\n          user_id={user_id}\n          existingIDs={existingIDs}\n        />\n\n        <Link to=\"/\">\n          <Button className=\"rightAlignedButtons\" danger>\n            Cancelar Edicion\n          </Button>\n        </Link>\n        {showSaved && <Alert message=\"Usuario editado con éxito\" type=\"info\" />}\n      </Col>\n    </main>\n  );\n}\n\nexport default EditUser;\n","import \"./App.css\";\nimport Home from \"./components/Home\";\nimport AddUser from \"./components/AddUser\";\nimport EditUser from \"./components/EditUser\";\nimport {useState} from \"react\";\nimport {Menu} from \"antd\";\nimport {HomeOutlined, EditOutlined, FileAddOutlined} from \"@ant-design/icons\";\nimport {Switch, Route, Link, useLocation} from \"react-router-dom\";\n\nfunction App() {\n  const location = useLocation();\n\n  const [selected, setSelected] = useState(location.pathname);\n\n  const handleClick = e => {\n    setSelected(e.key);\n  };\n\n  return (\n    <div>\n      <Menu onClick={handleClick} selectedKeys={selected} mode=\"horizontal\">\n        <Menu.Item key=\"/\" icon={<HomeOutlined />}>\n          <Link to={\"/\"}>Principal</Link>\n        </Menu.Item>\n        <Menu.Item key=\"/edit\" icon={<EditOutlined />}>\n          <Link to={\"/edit\"}>Editar Usuario</Link>\n        </Menu.Item>\n        <Menu.Item key=\"/add\" icon={<FileAddOutlined />}>\n          <Link to={\"/add\"}>Sumar Usuario</Link>\n        </Menu.Item>\n      </Menu>\n\n      <Switch>\n        <Route exact path=\"/edit/:user_id\" component={EditUser} />\n        <Route exact path=\"/edit\" component={EditUser} />\n        <Route exact path=\"/add\" component={AddUser} />\n        <Route path=\"/\" render={() => <Home selection={selected} />} />\n      </Switch>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport {HashRouter} from \"react-router-dom\";\n\nReactDOM.render(\n    <HashRouter>\n      <App />\n    </HashRouter>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}